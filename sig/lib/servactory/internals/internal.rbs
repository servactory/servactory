module Servactory
  module Internals
    class Internal
      class Actor
        attr_reader name: Symbol
        attr_reader types: Array[untyped]
        attr_reader options: Hash[Symbol, untyped]

        def initialize: (internal: Internal) -> void

        private

        def define_identity_methods: (internal: Internal) -> void
      end

      @option_helpers: Configuration::OptionHelpers::OptionHelpersCollection

      attr_reader name: Symbol
      attr_reader collection_of_options: untyped
      attr_reader options: Hash[Symbol, untyped]

      def initialize: (Symbol name, Array[Symbol] helpers, option_helpers: Configuration::OptionHelpers::OptionHelpersCollection, **untyped options) -> void

      def method_missing: (Symbol name, *untyped args) { () -> untyped } -> untyped

      def respond_to_missing?: (Symbol name, *untyped) -> bool

      def register_options: (helpers: Array[Symbol], options: Hash[Symbol, untyped]) -> Maintenance::Attributes::OptionsCollection

      def options_for_checks: () -> Hash[Symbol, untyped]

      def system_name: () -> Symbol

      def i18n_name: () -> String

      def input?: () -> false

      def internal?: () -> true

      def output?: () -> false

      private

      def create_options_registrar: (options: Hash[Symbol, untyped]) -> Maintenance::Attributes::Options::Registrar

      def available_feature_options: () -> Hash[Symbol, bool]

      def process_options_with_helpers: (helpers: Array[Symbol], options: Hash[Symbol, untyped]) -> Hash[Symbol, untyped]

      def apply_standard_helpers_to: (target_options: Hash[Symbol, untyped], helpers: Array[Symbol]) -> Hash[Symbol, untyped]

      def apply_advanced_helpers_to: (target_options: Hash[Symbol, untyped], source_options: Hash[Symbol, untyped]) -> Hash[Symbol, untyped]

      def extract_advanced_helpers: (options: Hash[Symbol, untyped]) -> Hash[Symbol, untyped]

      def transform_helpers_to_options: (helpers: (Array[Symbol] | Hash[Symbol, untyped])) -> Hash[Symbol, untyped]

      def transform_helper_to_option: (helper: Maintenance::Attributes::OptionHelper, values: untyped) -> Hash[Symbol, untyped]
    end
  end
end
