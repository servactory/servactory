module Servactory
  module Inputs
    module Tools
      class Validation
        @context: Servactory::Context::Workspace
        @collection_of_inputs: Collection
        @validation_classes_cache: Array[Class]

        def self.validate!: (*untyped, **untyped) ?{ (?) -> untyped } -> void

        def initialize: (Servactory::Context::Workspace context, Collection collection_of_inputs) -> void

        def validate!: () -> void

        private

        def check_reserved_names_for: (Input input) -> void

        @errors: Maintenance::Attributes::Tools::CheckErrors

        def process_input: (Input input) -> void

        def process_option: (Symbol check_key, Hash[Symbol, untyped] check_options, input: Input) -> void

        def process_validation_class: (validation_class: Class, input: Input, check_key: Symbol, check_options: Hash[Symbol, untyped]) -> instance

        def validation_classes_from: (Input input) -> Array[Class]

        def errors: -> Maintenance::Attributes::Tools::CheckErrors

        def raise_errors: () -> void
      end
    end
  end
end
