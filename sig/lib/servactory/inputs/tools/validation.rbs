module Servactory
  module Inputs
    module Tools
      class Validation
        @context: instance
        @collection_of_inputs: Collection

        def self.validate!: (context: Servactory::Context::Workspace, collection_of_inputs: Servactory::Inputs::Collection) -> Exception?

        def initialize: (context: Servactory::Context::Workspace, collection_of_inputs: Servactory::Inputs::Collection) -> void

        def validate!: () -> Exception?

        private

        @errors: Maintenance::Attributes::Tools::CheckErrors

        def process_input: (Servactory::Inputs::Input) -> void

        def process_option: (Symbol, untyped, input: Servactory::Inputs::Input) -> void

        def process_validation_class: (
          validation_class: Class,
          input: Servactory::Inputs::Input,
          check_key: Symbol,
          check_options: untyped
        ) -> Servactory::Maintenance::Attributes::Tools::CheckErrors

        def validation_classes_from: (Servactory::Inputs::Input) -> Array[Class]

        def errors: () -> Servactory::Maintenance::Attributes::Tools::CheckErrors

        def raise_errors: () -> void
      end
    end
  end
end
