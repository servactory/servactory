module Servactory
  module Context
    module Warehouse
      class Inputs < Base
        @context: untyped

        def initialize: (untyped context, ?Hash[Symbol, untyped] arguments) -> void

        def names: () -> Array[Symbol]

        def merge!: (Hash[Symbol, untyped] arguments) -> self

        def method_missing: (Symbol name, *untyped _args) -> untyped

        def respond_to_missing?: (Symbol name, *untyped _args) -> bool

        def raise_error_for: (Symbol input_name) -> Exception
      end
    end
  end
end
