module Servactory
  module Maintenance
    module Attributes
      module Tools
        class Validation
          @context: Servactory::Context::Workspace
          @attribute: (Inputs::Input | Internals::Internal | Outputs::Output)
          @value: untyped
          @validation_classes: Array[Class]

          def self.validate!: (*untyped) ?{ () -> untyped } -> void

          def initialize: (context: Servactory::Context::Workspace, attribute: (Inputs::Input | Internals::Internal | Outputs::Output), value: untyped) -> void

          def validate!: () -> void

          private

          def check_reserved_names: () -> void

          @errors: Maintenance::Attributes::Tools::CheckErrors

          def process: -> void

          def process_option: (Symbol check_key, Hash[Symbol, untyped] check_options) -> void

          def process_validation_class: (validation_class: Class, check_key: Symbol, check_options: Hash[Symbol, untyped]) -> instance

          def validation_classes: -> Array[Class]

          def errors: -> Maintenance::Attributes::Tools::CheckErrors

          def raise_errors: () -> void
        end
      end
    end
  end
end
