module Servactory
  module Info
    class Builder
      @inputs: Hash[Symbol, untyped]

      @internals: Hash[Symbol, untyped]

      @outputs: Hash[Symbol, untyped]

      attr_reader inputs: Hash[Symbol, untyped]

      attr_reader internals: Hash[Symbol, untyped]

      attr_reader outputs: Hash[Symbol, untyped]

      def self.build: (*untyped, **untyped) ?{ (?) -> untyped } -> untyped

      def build: (collection_of_inputs: Inputs::Collection, collection_of_internals: Internals::Collection, collection_of_outputs: Outputs::Collection, config: Configuration::Setup) -> self

      private

      def build_inputs_with: (collection_of_inputs: Inputs::Collection, dynamic_options: Configuration::OptionHelpers::OptionHelpersCollection) -> Hash[Symbol, untyped]

      def build_internals_with: (collection_of_internals: Internals::Collection, dynamic_options: Configuration::OptionHelpers::OptionHelpersCollection) -> Hash[Symbol, untyped]

      def build_outputs_with: (collection_of_outputs: Outputs::Collection, dynamic_options: Configuration::OptionHelpers::OptionHelpersCollection) -> Hash[Symbol, untyped]

      def build_options_for: ((Inputs::Input | Internals::Internal | Outputs::Output) attribute, Configuration::OptionHelpers::OptionHelpersCollection dynamic_options) -> Hash[Symbol, untyped]

      def build_option_from: (body_key: Symbol, value: untyped) -> ::Hash[Symbol, untyped]

      def enrich_options_for: ((Inputs::Input | Internals::Internal | Outputs::Output) attribute, untyped options) -> Hash[Symbol, untyped]
    end
  end
end
