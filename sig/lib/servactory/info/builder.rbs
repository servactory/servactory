module Servactory
  module Info
    class Builder
      attr_reader inputs: Hash[Symbol, Hash[Symbol, untyped]]
      attr_reader internals: Hash[Symbol, Hash[Symbol, untyped]]
      attr_reader outputs: Hash[Symbol, Hash[Symbol, untyped]]

      def self.build: (
        collection_of_inputs: Inputs::Collection,
        collection_of_internals: Internals::Collection,
        collection_of_outputs: Outputs::Collection,
        config: Configuration::Store
      ) -> Builder

      def build: (
        collection_of_inputs: Inputs::Collection,
        collection_of_internals: Internals::Collection,
        collection_of_outputs: Outputs::Collection,
        config: Configuration::Store
      ) -> self

      private

      def extract_dynamic_options_from: (Configuration::Store config) -> Configuration::OptionHelpers::OptionHelpersCollection

      def build_all_attributes: (
        inputs: Inputs::Collection,
        internals: Internals::Collection,
        outputs: Outputs::Collection,
        dynamic_options: Configuration::OptionHelpers::OptionHelpersCollection
      ) -> void

      def build_input_attributes_with: (
        collection: Inputs::Collection,
        dynamic_options: Configuration::OptionHelpers::OptionHelpersCollection
      ) -> void

      def build_internal_attributes_with: (
        collection: Internals::Collection,
        dynamic_options: Configuration::OptionHelpers::OptionHelpersCollection
      ) -> void

      def build_output_attributes_with: (
        collection: Outputs::Collection,
        dynamic_options: Configuration::OptionHelpers::OptionHelpersCollection
      ) -> void

      def build_attributes_with: (
        collection: (Inputs::Collection | Internals::Collection | Outputs::Collection),
        dynamic_options: Configuration::OptionHelpers::OptionHelpersCollection,
        ?include_specific_options: bool
      ) -> Hash[Symbol, Hash[Symbol, untyped]]

      def process_options_for: (
        attribute: (Inputs::Input | Internals::Internal | Outputs::Output),
        dynamic_options: Configuration::OptionHelpers::OptionHelpersCollection
      ) -> Hash[Symbol, untyped]

      def build_dynamic_options_for: (
        attribute: (Inputs::Input | Internals::Internal | Outputs::Output),
        dynamic_options: Configuration::OptionHelpers::OptionHelpersCollection
      ) -> Hash[Symbol, untyped]

      def format_option_value: (body_key: Symbol, value: untyped) -> Hash[Symbol, untyped]
      def extract_value_for_body_key: (body_key: Symbol, value: untyped) -> untyped
      def extract_message_from_value: (value: untyped) -> String?

      def enrich_options_with_common_fields: (
        attribute: (Inputs::Input | Internals::Internal | Outputs::Output),
        options: Hash[Symbol, untyped]
      ) -> Hash[Symbol, untyped]
    end
  end
end
